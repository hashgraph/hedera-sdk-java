/*-
 *
 * Hedera Java SDK
 *
 * Copyright (C) 2020 - 2022 Hedera Hashgraph, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package com.hedera.hashgraph.sdk;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;

class KeystoreTest {
    private static final String TEST_KEY_STR = "302e020100300506032b657004220420db484b828e64b2d8f12ce3c0a0e93a0b8cce7af1bb8f39c97732394482538e10";
    private static final String PASSPHRASE = "asdf1234";

    @Test
    @DisplayName("Keystore.fromStream returns correct key")
    void keystoreFromStream() throws IOException {
        // keystore file generated by hedera-sdk-js from `testKeyStr` and `passphrase`
        // NOT USED ANYWHERE
        InputStream inputStream = KeystoreTest.class.getResourceAsStream("/test-keystore.bin");
        Keystore keystore = Keystore.fromStream(inputStream, PASSPHRASE);

        PrivateKey privateKey = keystore.getEd25519();
        Assertions.assertEquals(TEST_KEY_STR, privateKey.toString());
    }

    @Test
    @DisplayName("Keystore.fromStream returns correct key v2")
    void keystoreFromStreamV2() throws IOException {
        // keystore file generated by hedera-sdk-js from `testKeyStr` and `passphrase`
        // NOT USED ANYWHERE
        InputStream inputStream = KeystoreTest.class.getResourceAsStream("/test-keystore2.bin");
        Keystore keystore = Keystore.fromStream(inputStream, PASSPHRASE);

        PrivateKey privateKey = keystore.getEd25519();
        Assertions.assertEquals(TEST_KEY_STR, privateKey.toString());
    }

    @Test
    @DisplayName("Keystore.toStream produces decodable value")
    void keystoreToStream() throws IOException {
        PrivateKey privateKey = PrivateKey.fromString(TEST_KEY_STR);
        Keystore keystore = new Keystore(privateKey);

        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
        keystore.export(outputStream, PASSPHRASE);

        Keystore keystore2 = Keystore.fromStream(new ByteArrayInputStream(outputStream.toByteArray()), PASSPHRASE);
        PrivateKey privateKey2 = keystore2.getEd25519();

        Assertions.assertEquals(TEST_KEY_STR, privateKey2.toString());
    }
}
