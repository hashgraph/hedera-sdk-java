syntax = "proto3";

package proto;

/*-
 * ‌
 * Hedera Network Services Protobuf
 * ​
 * Copyright (C) 2018 - 2021 Hedera Hashgraph, LLC
 * ​
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ‍
 */

option java_package = "com.hedera.hashgraph.sdk.proto";
option java_multiple_files = true;

import "basic_types.proto";
import "timestamp.proto";

/**
 * Updates the staking info at the end of staking period to indicate new staking period has started.
 */
message NodeStakeUpdateTransactionBody {
  /**
   * Time and date of the end of the staking period that is ending
   */
  Timestamp end_of_staking_period = 1;

  /**
   * Staking info of each node at the beginning of the new staking period
   */
  repeated NodeStake node_stake = 2;
}

/**
 * Staking info for each node at the end of a staking period.
 */
message NodeStake {
  /**
   * The maximum stake (rewarded or not rewarded) this node can have as consensus weight. If its stake to
   * reward is above this maximum at the start of a period, then accounts staking to the node in that 
   * period will be rewarded at a lower rate scaled by (maxStake / stakeRewardStart).
   */
  int64 max_stake = 1;

  /**
   * The minimum stake (rewarded or not rewarded) this node must reach before having non-zero consensus weight.
   * If its total stake is below this minimum at the start of a period, then accounts staking to the node in 
   * that period will receive no rewards.
   */
  int64 min_stake = 2;

  /**
   * The id of this node.
   */
  int64 node_id = 3;

  /**
   * The reward rate _per whole hbar_ that was staked to this node with declineReward=false from the start of 
   * the staking period that is ending. 
   */
  int64 reward_rate = 4;

  /**
   * Consensus weight of this node for the new staking period.
   */
  int64 stake = 5;

  /**
   * Total of (balance + stakedToMe) for all accounts staked to this node with declineReward=true, at the 
   * beginning of the new staking period.
   */
  int64 stake_not_rewarded = 6;

  /**
   * Total of (balance + stakedToMe) for all accounts staked to this node with declineReward=false, at the 
   * beginning of the new staking period.
   */
  int64 stake_rewarded = 7;
}
